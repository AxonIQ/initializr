name: 'Prepare production release'

on:
  push:
    tags:
      - '*'

jobs:
  setup-build-push:
    name: Perform a production release
    runs-on: ubuntu-latest

    steps:
      - name: Get tag name
        id: get_tag_name
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.get_tag_name.outputs.TAG }}
      - run: |
          git config user.name 'AxonIQ devbot'
          git config user.email 'devbot@axoniq.io'
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      # Setup gcloud CLI, needed to push image on gcr by mvn
      - uses: google-github-actions/setup-gcloud@main
        with:
          version: '297.0.1'
          service_account_key: ${{ secrets.GKE_DEVOPS_SA_KEY }}
          project_id: 'axoniq-devops'
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Get image version from pom.
        id: vars
        run: |
          echo ::set-output name=version_from_pom::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
      - name: Publish docker image to eu.gcr.io
        run: |
          ./mvnw -B -U -Pdocker package -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.DEVBOT_GITHUB_TOKEN }}

    outputs:
      image_version: ${{ steps.vars.outputs.version_from_pom }}

  prepare-cd:
    name: Prepare next release.
    runs-on: ubuntu-latest

    needs: setup-build-push

    steps:
      - name: Checkout AxonIQ/initializr-deploy repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          repository: AxonIQ/initializr-deploy
          ref: main
      - run: |
          git config user.name 'AxonIQ devbot'
          git config user.email 'devbot@axoniq.io'
      - name: Preapare next production release
        if: github.github.head_ref == null
        run: |
          cd k8s/prod/
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          ./kustomize edit set image eu.gcr.io/axoniq-devops/axoniq-initializr=eu.gcr.io/axoniq-devops/axoniq-initializr:$IMAGE_VERSION
        env:
          IMAGE_VERSION : ${{ needs.setup-build-push.outputs.image_version }}

      - name: Push release changes
        run: |
          git commit -am "[initializr-deploy] Prepare next production release $IMAGE_VERSION"
          git push
        env:
          IMAGE_VERSION : ${{ needs.setup-build-push.outputs.image_version }}